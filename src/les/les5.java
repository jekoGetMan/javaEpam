package les;


public class les5{
    //TDD & Martin
    //junit джеюнит
    //Before аннотация// after
    //class loader
    // Под каждый метод один assert
    // На один метод 5 тестов
    // тестируется любая логика
    // модульные тесты/интеграционные тесты
    // с = null - нет ссылки на объект
    // cборщик проекта(мавен), жизненный цикл
    // сборщики Gradle/Ant
    // Apache Maven
    // Начнем tdd Bob martin
    // Проверка объекта null/ne null
    //nullPointerException
    // Из метода конструктор мы не можем вызвать
    // Динамическое связывание
    //Контракт
    //Bird bird = (Bird) new Strauss();
    // Внутренний анонимный класс
    // Выше уровня абстракции Bird есть Animal
    // В интерфейсах поля и методы только public
    // Поля в интерфейсах константы
    // public abstract - методы / public static final - поля
    // интерфейс маркер
    // клонировать объект и работать с копией
    // Java 1.8
    // Функциональный интерфейс - один абстрактный метод и любое к-ство обычных.
    //Указатели = лямда выражения(функциональные интерфейсы)
    // Интерфейс - методичка, контракт, который должен реализовать все абстрактные методы
    // ОДин класс до 5 интерфейса(2/3)
    // любимое it // dou.ua
    // Важно один раз реализовать абстрактный класс
    // Интерфейсы в одном пакете, классы в другом. Отдельно интерфейсы - отдельно классы
    // Коллекции/листы ArrayList/List/Collection
    // Maven version m2 home/ Maven Apache // Junit//Mockito(мокать объекты/заглушка)
    // Понятие мок/стаб/спайт mock/stub/spy|
    // Bob Martion video
    // Жизненный цикл
    // Default и static (оба Public)




}
